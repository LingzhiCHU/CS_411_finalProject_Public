



/* ControlTag Loader for Expedia.com 3d8e4b51-b537-4841-9086-4f59862457c6 */
(function(w, cs) {
  
  if (/Twitter for iPhone/.test(w.navigator.userAgent || '')) {
    return;
  }

  var debugging = /kxdebug/.test(w.location);
  var log = function() {
    
    debugging && w.console && w.console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = w.document.createElement('script');
    node.async = true;  
    node.src = url;

    
    node.onload = node.onreadystatechange = function () {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  
        callback();
      }
    };

    
    var sibling = w.document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  var config = {"app":{"name":"krux-scala-config-webservice","version":"3.18.1","schema_version":3},"confid":"q1jglrva2","context_terms":[],"publisher":{"id":2021,"name":"Expedia.com","uuid":"3d8e4b51-b537-4841-9086-4f59862457c6","version_bucket":"stable","version_hash":"6f097431db32c7c9f9254dccb9812402"},"params":{"link_header_bidder":false,"site_level_supertag_config":"site","recommend":false,"control_tag_pixel_throttle":100,"fingerprint":true,"user_data_timing":"load","store_realtime_segments":false,"tag_source":false,"link_hb_start_event":"ready","first_party_uid":false,"link_hb_timeout":2000,"link_hb_adserver_subordinate":true,"buckets":"meso","optimize_realtime_segments":false,"link_hb_adserver":"dfp","target_fingerprint":false,"prioritized_segments":false,"context_terms":false,"controltag_interchange_segment_buckets":"meso","dfp_premium":true,"control_tag_namespace":"expedia"},"prioritized_segments":[],"realtime_segments":[],"services":{"userdata":"//cdn.krxd.net/userdata/get","contentConnector":"//connector.krxd.net/content_connector","stats":"//apiservices.krxd.net/stats","optout":"//cdn.krxd.net/userdata/optout/status","event":"//beacon.krxd.net/event.gif","set_optout":"//apiservices.krxd.net/consumer/optout","data":"//beacon.krxd.net/data.gif","link_hb_stats":"//beacon.krxd.net/link_bidder_stats.gif","userData":"//cdn.krxd.net/userdata/get","link_hb_mas":"//link.krxd.net/hb","config":"//cdn.krxd.net/controltag/{{ confid }}.js","social":"//beacon.krxd.net/social.gif","addSegment":"//cdn.krxd.net/userdata/add","pixel":"//beacon.krxd.net/pixel.gif","um":"//apiservices.krxd.net/um","click":"//apiservices.krxd.net/click_tracker/track","stats_export":"//beacon.krxd.net/controltag_stats.gif","cookie":"//beacon.krxd.net/cookie2json","proxy":"//cdn.krxd.net/partnerjs/xdi","is_optout":"//beacon.krxd.net/optout_check","impression":"//beacon.krxd.net/ad_impression.gif","transaction":"//beacon.krxd.net/transaction.gif","log":"//jslog.krxd.net/jslog.gif","set_optin":"//apiservices.krxd.net/consumer/optin","usermatch":"//beacon.krxd.net/usermatch.gif"},"site":{"id":1520109,"name":"Expedia Site"},"tags":[{"id":29212,"name":"Infectious Media Usermatch","content":"<script>\n(function(){\n  var prefix = window.location.protocol == 'https:' ? 'https' : 'http';\n  var partner_url = prefix +'://pix.impdesk.com/csync/krux';\n  new Image().src = partner_url;\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","internal":true,"template_replacement":true,"criteria":["and",["and",["and",["<=","$frequency",3]]]]},{"id":21861,"name":"Technographic Data provider tag","content":"<script>\r\n// this tag is intentionally blank\r\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","internal":true,"template_replacement":true,"criteria":["and",["and",["and",["<=","$frequency",3]]]]},{"id":21862,"name":"Krux Geographic Data provider tag","content":null,"target":null,"target_action":"append","timing":"onload","method":"document","internal":true,"template_replacement":true,"criteria":["and",["and",["and",["<=","$frequency",3]]]]},{"id":21863,"name":"Krux DTC Standard","content":"<script>\n(function(){\n    \n    Krux('scrape',{'page_attr_url_path_1':{'url_path':'1'}});\n    Krux('scrape',{'page_attr_url_path_2':{'url_path':'2'}});\n    Krux('scrape',{'page_attr_url_path_3':{'url_path':'3'}});\n    Krux('scrape',{'page_attr_meta_keywords':{meta_name:'keywords'}});\n    var domain = Krux('scrape',{'page_attr_domain':{url_domain: '2'}}).page_attr_domain;\n    if(domain.match(/^com?\\./)){\n         Krux('scrape',{'page_attr_domain':{url_domain: '3'}});\n    }\n})();\n</script>","target":"","target_action":"append","timing":"onload","method":"document","internal":true,"template_replacement":true,"criteria":[]},{"id":26557,"name":"Krux DataLayer Ingester","content":"<script>\n(function() {\n\n    var page = ['device.device.type', 'pageInfo.language', 'activityId', 'activityName', 'currencyCode', 'checkout.cartTotal.amount', 'bookingDateinUTC', 'carVendor', 'carType', 'carPickUpLocationCode', 'carDropOffLocationCode', 'cruiseLine', 'cabinClass', 'cruiseTitle', 'departureMonth', 'carrierCodes', 'lengthOfFlight', 'starRating', 'guestRating', 'hotelBrand', 'hotelName', 'hotelId', 'numberOfRooms', 'roomType', 'roomDescription', 'packageType', 'SiteBrand', 'pointofsales', 'pageType', 'lob.domain', 'siteName', 'siteId', 'adults', 'childrenCount', 'numberOfGuests', 'destination', 'regionId', 'destinationAirportCode', 'origin', 'originAirportCode', 'bookingWindow', 'lengthOfStay', 'checkInDate', 'checkOutDate', 'city', 'state', 'stateProvinceCode', 'country', 'countryCode', 'roomNights', 'isInternationalBooking', 'tripType'];\n\n    var user = ['rewardsStatus.membershipTier', 'loggedUser', 'device.device.type', 'context.user.expUserProfileId', 'pageInfo.language', 'context.marketingAttribution.restrictedLastTouch', 'tuid', 'guid', 'checkout.trl', 'checkout.customerFacingItineraryNumber'];\n\n    var checkOver = function(arr, dl, type) {\n        var i, len = arr.length;\n        for (i = 0; i < len; i++) {\n            if (arr.hasOwnProperty(i) && dl[arr[i]]) {\n                dataObj[type][arr[i]] = dl[arr[i]];\n            }\n        }\n    };\n\n    if (window.utag_data) {\n        var dl = window.utag_data;\n        var dataObj = {\n            page: {},\n            user: {}\n        };\n        checkOver(page, dl, 'page');\n        checkOver(user, dl, 'user');\n        var omitKeys = '',\n            custDelimit = '',\n            prefix = '',\n            config = {\n                'userKeys': user,\n                'omitKeys': omitKeys ? omitKeys.split(',') : [],\n                'customDelimited': custDelimit ? custDelimit.split(',') : undefined,\n                'caseSensitive': true,\n                'useFullPath': true,\n                'useLastValue': false,\n                convertAttrNames: [{\n                    pattern: /page_attr_page.carDropOffLocationCode|page_attr_page.destinationAirportCode/,\n                    replacement: 'page_attr_page.mergedDestinationCode'\n                }, {\n                    pattern: /page_attr_page.originAirportCode|page_attr_page.carPickUpLocationCode/,\n                    replacement: 'page_attr_page.mergedOriginCode'\n                }, {\n                    // the following two attributes are ingested both as page and user attributes, but for some reason the data layer ingester marks them always as user attributes, renaming the attributes here explicitly solves the issue\n                    // the reason for ingesting them as two types is to built up the page attribute population and then deactivating the user attribute\n                    pattern: /user_attr_page.device.device.type/,\n                    replacement: 'page_attr_page.site.platform'\n                }, {\n                    pattern: /user_attr_page.pageInfo.language/,\n                    replacement: 'page_attr_page.language'\n                }]\n            };\n\n        if (!prefix.match(/^$|null|undefined|false/)) {\n            config.convertAttrNames.push({\n                pattern: /((?:page|user)_attr_)/,\n                replacement: '$1' + prefix\n            });\n        }\n        config.omitKeys.push(/gtm\\./);\n        Krux('ingestDataLayer', dataObj, config);\n    }\n\n})();\n</script>","target":null,"target_action":"append","timing":"onload","method":"document","internal":true,"template_replacement":true,"criteria":[]}],"link":{"adslots":{},"bidders":{}}};
  
  for (var i = 0, tags = config.tags, len = tags.length, tag; (tag = tags[i]); ++i) {
    if (String(tag.id) in cs) {
      tag.content = cs[tag.id];
    }
  }

  
  var esiGeo = String(function(){/*
   <esi:include src="/geoip_esi"/>
   */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = w.JSON.parse(esiGeo);
    } catch (__) {
      
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }



  var proxy = (window.Krux && window.Krux.q && window.Krux.q[0] && window.Krux.q[0][0] === 'proxy');

  if (!proxy || true) {
    

  load('//cdn.krxd.net/ctjs/controltag.js.6f097431db32c7c9f9254dccb9812402', function() {
    log('Loaded stable controltag resource');
    Krux('config', config);
  });

  }

})(window, (function() {
  var obj = {};
  
  return obj;
})());
